{"version":3,"sources":["components/Section/Section.module.css","components/Feedback-options/Feedback-options.module.css","components/Notification-message/Notification-message.module.css","components/Statistics/Statistics.module.css","components/Feedback-options/Feedback-options.jsx","components/Notification-message/Notification-message.jsx","components/Section/Section.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","className","s","btn","type","onClick","NotificationMessage","message","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","list","App","state","optionsNames","Object","keys","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","setState","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,IAAM,gC,gBCAxBD,EAAOC,QAAU,CAAC,QAAU,wC,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,2B,+LCuBVC,EAlBS,SAAC,GAGnB,IAFDC,EAEA,EAFAA,QACDC,EACC,EADDA,gBAEA,OAAOD,EAAQE,KAAI,SAACC,GAChB,OAAO,wBACHC,UAAWC,IAAEC,IACbC,KAAK,SACLC,QAAS,kBAAMP,EAAgB,CAACE,YAH7B,SAILA,GAJkBA,O,gBCCbM,EARa,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACxB,mBAAGN,UAAWC,IAAEK,QAAhB,SAA0BA,K,gBCYfC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OAAO,0BAAST,UAAWC,IAAEM,QAAtB,UACH,oBAAIP,UAAWC,IAAEO,MAAjB,SAAyBA,IACxBC,M,iBCwBMC,EA3BI,SAAC,GAMb,IALHC,EAKE,EALFA,KACAC,EAIE,EAJFA,QACAC,EAGE,EAHFA,IACAC,EAEE,EAFFA,MACAC,EACE,EADFA,mBAEA,OAAO,qBAAIf,UAAWC,IAAEe,KAAjB,UACH,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDACwBA,EAAQ,EACtBC,EAAqB,IACrB,YC4CHE,E,4MAtDbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPM,aAAeC,OAAOC,KAAK,EAAKH,O,EAIhCI,mBAAqB,WAAO,IAAD,EACM,EAAKJ,MACpC,OAFyB,EACjBP,KADiB,EACXC,QADW,EACFC,K,EAGzBU,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKP,MAAMP,KAAc,EAAKW,uB,EAEnDzB,gBAAkB,YAAiB,IAAdE,EAAa,EAAbA,OACnB,EAAK2B,UAAS,SAACC,GACb,OAAO,eACJ5B,EAAS4B,EAAU5B,GAAU,O,uDAI1B,IAAD,EACwB6B,KAAKV,MAA5BP,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,sBAAKb,UAAU,MAAf,UACE,cAAC,EAAD,CAASQ,MAAM,wBAAf,SAEI,cAAC,EAAD,CACEZ,QAASgC,KAAKT,aACdtB,gBAAiB+B,KAAK/B,oBAI3B+B,KAAKN,qBAAuB,EAC3B,cAAC,EAAD,CAASd,MAAM,aAAf,SACE,cAAC,EAAD,CACEG,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,KAAKN,qBACZP,mBAAoBa,KAAKL,sCAI7B,cAAC,EAAD,CAAqBjB,QAAQ,6B,GAhDrBuB,aCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7dc97810.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__LqS2d\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Feedback-options_btn__11VRX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification-message_message__1Hauw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3oKT7\"};","// import React from \"react\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Feedback-options.module.css\";\n\n\nconst FeedbackOptions = (\n    {options,\n    onLeaveFeedback }\n) => {\n    return options.map((option) => {\n        return <button key={option}\n            className={s.btn}\n            type=\"button\"\n            onClick={() => onLeaveFeedback({option})}\n        >{option}\n        </button>\n    });   \n}\nFeedbackOptions.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired,\n}\n\nexport default FeedbackOptions;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Notification-message.module.css\";\n\nconst NotificationMessage = ({ message }) =>\n    <b className={s.message}>{message}\n    </b>;\n    \nNotificationMessage.propTypes = {\n    message: PropTypes.string.isRequired,\n}\n\nexport default NotificationMessage;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n    return <section className={s.Section}>\n        <h2 className={s.title}>{title}</h2>\n        {children}\n    </section>;\n}\n    \n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.element.isRequired,\n}\n\nexport default Section;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nconst Statistics = ({\n    good,\n    neutral,\n    bad,\n    total,\n    positivePercentage\n}) => { \n    return <ul className={s.list}>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral}</li>\n        <li>Bad: {bad}</li>\n        <li>Total: {total}</li>\n        <li>\n            Positive feedback: {total > 0\n                ? positivePercentage + \"%\"\n                : null}\n        </li>\n    </ul>;   \n}\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./App.css\";\nimport FeedbackOptions from \"./components/Feedback-options\";\nimport NotificationMessage from \"./components/Notification-message\";\nimport Section from \"./components/Section\";\nimport Statistics from \"./components/Statistics\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  optionsNames = Object.keys(this.state);\n  static propTypes = {\n    option: PropTypes.string.isRequired,\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  };\n  onLeaveFeedback = ({ option }) => {\n    this.setState((prevState) => {\n      return {\n        [option]: prevState[option] + 1,\n      };\n    });\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          {\n            <FeedbackOptions\n              options={this.optionsNames}\n              onLeaveFeedback={this.onLeaveFeedback}\n            />\n          }\n        </Section>\n        {this.countTotalFeedback() > 0 ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <NotificationMessage message=\"No feedback given\" />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}